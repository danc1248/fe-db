/*! fe-db - v1.0.2 - 2016-01-09 */(function(){window.FEDB=function(){var a,b,c,d,e,f,g;if(!$)throw new Error("jQuery is required for promises");return b={Number:1,String:2,Table:4,Image:5},c=function(){function a(){this.tables={}}return a.prototype.setTable=function(a,b,c){var d;return null==c&&(c=[]),d=new f(b,this),this.tables[a]=new g(d,c),this},a.prototype.getTable=function(a){if(void 0===this.tables[a])throw new Error("Unknown table: "+a);return this.tables[a]},a}(),f=function(){function a(a,b){var c,d,e,f,g;this.schema=a,this.database=b,this.indexes=[],f=this.schema;for(c in f)d=f[c],"object"!==$.type(d)&&(this.schema[c]={type:d});g=this.schema;for(c in g)e=g[c],e.unique===!0&&this.indexes.push(c),e.required!==!0&&e.required!==!1&&(e.required=!0);this.fields=Object.keys(this.schema)}return a.prototype._getType=function(a){var b;if(b=this.schema[a],void 0===b)throw new Error("Unknown type: "+a);return b.type},a.prototype._getTableName=function(a){var b;if(b=this.schema[a],void 0===b||void 0===b.tableName)throw new Error("Unknown table name: "+a);return b.tableName},a.prototype._getIndexes=function(){return this.indexes},a.prototype._validateData=function(a){var b,c,d;for(b=0,c=a.length;c>b;b++)d=a[b],this.__validateRow(d);return!0},a.prototype.__validateRow=function(a,b){var c,d,e,f;for(f=this.fields,d=0,e=f.length;e>d;d++)c=f[d],this.__validateField(a[c],this.schema[c],c);return!0},a.prototype.__validateField=function(a,c,d){if(void 0===a){if(c.required===!0)throw new Error("undefined value for required field: "+d);return!0}if(c.type===b.Number&&"number"===$.type(a))return!0;if(c.type===b.String&&"string"===$.type(a))return!0;if(c.type===b.Table&&"array"===$.type(a))return void 0===c.tableName&&(c.tableName=d),!0;if(c.type===b.Image&&"object"===$.type(a))return!0;throw new Error("invalid type in data: "+d+": "+a)},a}(),g=function(){function a(a,b){var c,d,e,f;for(this.schema=a,this.data=b,this.schema._validateData(this.data),this.indexes={},f=this.schema._getIndexes(),d=0,e=f.length;e>d;d++)c=f[d],this.indexes[c]=this.__addIndex(c)}return a.prototype._getSchema=function(){return this.schema},a.prototype.__addIndex=function(a){var b,c,d,e,f,g;for(c={},f=this.data,b=d=0,e=f.length;e>d;b=++d){if(g=f[b],void 0!==c[g[a]])throw new Error("non unique index: "+a);c[g[a]]=b}return c},a.prototype._hasIndex=function(a){return!!this.indexes[a]},a.prototype.getByIndex=function(a,b){var c;if(void 0!==this.indexes[a]&&void 0!==this.indexes[a][b])return c=this.indexes[a][b],this.data[c];throw new Error("getByIndex called on non-indexed field: "+a+", "+b)},a.prototype._getData=function(){return this.data},a.prototype.query=function(){var a;return a=new d(this)},a}(),d=function(){function c(a){this.table=a,this.comparison=null,this.queryOrdering=null,this.join=null}return c.prototype.where=function(b,c){var d;return d=new a(b,c),this.setComparison(d)},c.prototype.orderBy=function(a,b){var c;return null==b&&(b="ASC"),c=new e(a,b),this.setQueryOrdering(c)},c.prototype.leftJoin=function(a,c,d){var e,f;if(null==d&&(d=null),this.table._getSchema()._getType(a)===b.Table)return null===d&&(d=this.table._getSchema()._getTableName(a)),f=c.getTable(d),e=f.query().where("id","="),this.setJoin(a,e);throw new Error("Join only supported for DataType.Table: "+a)},c.prototype.setComparison=function(a){if(null!==this.comparison)throw new Error("Comparison already set");return this.comparison=a,this},c.prototype.setQueryOrdering=function(a){if(null!==this.queryOrdering)throw new Error("QueryOrdering already set");return this.queryOrdering=a,this},c.prototype.setJoin=function(a,b){if(null!==this.join)throw new Error("Join already set, your dev is lazy and you cant do multiple joins");return this.join={field:a,query:b},this},c.prototype.execute=function(a){var b;return b=$.Deferred(),setTimeout(function(c){return function(){return b.resolve(c.__execute(a))}}(this)),b.promise()},c.prototype.__execute=function(a){var b,c,d,e,f;return null!==this.comparison?(b=this.comparison._getField(),this.comparison._isSingleOperation()&&this.table._hasIndex(b)?(f=this.table.getByIndex(b,a),e=[f]):e=this.table._getData().filter(function(b){return function(c){return b.comparison._compare(c,a)}}(this))):e=JSON.parse(JSON.stringify(this.table._getData())),null!==this.join&&(c=this.join.field,d=this.join.query,e=e.map(function(a){return function(a){var b;return b=a[c],a[c]=b.map(function(a){return e=d.__execute(a)[0]}),a}}(this))),null!==this.queryOrdering&&(e=this.queryOrdering._sortResults(e)),e},c}(),e=function(){function a(a,b){switch(b){case"ASC":case"asc":this.orderByFn=function(b,c){var d,e;return d=b[a],e=c[a],e>d?-1:d>e?1:0};break;case"DESC":case"desc":this.orderByFn=function(b,c){var d,e;return d=b[a],e=c[a],e>d?1:d>e?-1:0};break;default:throw new Error("unknown ordering: "+b)}}return a.prototype._sortResults=function(a){return a.sort(this.orderByFn)},a}(),a=function(){function a(a,b){switch(this.field=a,this.operation=b,this.operation){case"=":this.operationFn=function(a,b){return a===b};break;case"<>":case"!=":this.operationFn=function(a,b){return a!==b};break;case"<":this.operationFn=function(a,b){return b>a};break;case">":this.operationFn=function(a,b){return a>b};break;case"<=":this.operationFn=function(a,b){return b>=a};break;case">=":this.operationFn=function(a,b){return a>=b};break;case"*":this.operationFn=function(){return!0};break;default:throw new Error("operation not supported: "+this.operation)}}return a.prototype._getField=function(){return this.field},a.prototype._isSingleOperation=function(){return"="===this.operation},a.prototype._compare=function(a,b){return this.operationFn(a[this.field],b)},a}(),{Database:c,Table:g,Query:d,Comparison:a,Data:b}}()}).call(this);